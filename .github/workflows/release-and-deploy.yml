# releases the project with specified version bump
# deploys it to the central npm repository
name: Release and deploy to npm repository
on:
  workflow_dispatch:
    inputs:
      release-type:
        description: "Release version (such as 3.17.2) or bump type, i.e, one of: patch, minor, major, prepatch, preminor, premajor, or prerelease"
        required: true
    secrets:
      QUDTLIB_BOT_GITHUB_TOKEN:
        required: true
      NPMJS_ACCESS_TOKEN:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Set up java with maven cache
      - name: Checkout
        uses:
          actions/checkout@v4
          # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          registry-url: https://registry.npmjs.org/
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Build and run tests
        run: npm run build-complete

      # configure git
      - name: setup git config
        run: |
          git config user.name ${{ github.actor }}
          git config user.email "<>"

      # Bump package version
      # Use tag latest
      - name: Bump release version
        if: startsWith(github.event.inputs.release-type, 'pre') != true
        run: |
          echo NEW_VERSION=$(echo $(npx lerna version --no-git-tag-version --no-push --yes $RELEASE_TYPE ) | sed -e 's/^.*\=> *//g' | sed -e 's/ *(private)//g') >> $GITHUB_ENV
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      # Bump package pre-release version
      # Use tag beta for pre-release versions
      - name: Bump pre-release version
        if: startsWith(github.event.inputs.release-type, 'pre')
        run: |
          echo NEW_VERSION=$(echo $(npx lerna version --no-git-tag-version --no-push --preid=beta --yes $RELEASE_TYPE ) | sed -e 's/^.*\=> *//g' | sed -e 's/ *(private)//g') >> $GITHUB_ENV
          echo "RELEASE_TAG=beta" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      # Update changelog unreleased section with new version
      - name: Update changelog
        uses: superfaceai/release-changelog-action@v2
        with:
          path-to-changelog: CHANGELOG.md
          version: ${{ env.NEW_VERSION }}
          operation: release

      # Apply formatting (changelog was touched)
      - name: Apply format using spotless:apply
        run: npx prettier --write CHANGELOG.md

      # Commit changes
      - name: Commit CHANGELOG.md
        run: |
          git add --all 
          git commit -m "Release ${{ env.NEW_VERSION }}"
          git tag v${{ env.NEW_VERSION }}

      # Publish version to public repository
      - name: Publish
        run: npx lerna publish from-package --dist-tag ${{ env.RELEASE_TAG }} --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMJS_ACCESS_TOKEN }}

      # Push repository changes
      - name: Push changes to repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push -f origin && git push -f origin tags/v${{ env.NEW_VERSION }}

      # Read version changelog
      - id: get-changelog
        name: Get version changelog
        uses: superfaceai/release-changelog-action@v2
        with:
          path-to-changelog: CHANGELOG.md
          version: ${{ env.NEW_VERSION }}
          operation: read

      # Update GitHub release with changelog
      - name: Update GitHub release documentation
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_VERSION }}
          body: ${{ steps.get-changelog.outputs.changelog }}
          prerelease: ${{ startsWith(github.event.inputs.release-type, 'pre') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # print the summary
      - name: Print summary
        run: echo "Release ${{ inputs.release_version }} deployed to sonatype staging repo. Please go there, close the repo and publish it." >> $GITHUB_STEP_SUMMARY
